{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/[question]-[profile]",
      "regex": "^/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPquestion": "nxtPquestion"
      },
      "namedRegex": "^/(?<nxtPquestion>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/SelectionFlow",
      "regex": "^/SelectionFlow(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/SelectionFlow(?:/)?$"
    },
    {
      "page": "/feedback",
      "regex": "^/feedback(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/feedback(?:/)?$"
    },
    {
      "page": "/home",
      "regex": "^/home(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/home(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/pages:q1-[profile]",
      "regex": "^/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPprofile": "nxtPprofile"
      },
      "namedRegex": "^/(?<nxtPprofile>[^/]+?)(?:/)?$"
    },
    {
      "page": "/pages:q4-[profile]",
      "regex": "^/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPprofile": "nxtPprofile"
      },
      "namedRegex": "^/(?<nxtPprofile>[^/]+?)(?:/)?$"
    },
    {
      "page": "/presentation2",
      "regex": "^/presentation2(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/presentation2(?:/)?$"
    },
    {
      "page": "/profileA",
      "regex": "^/profileA(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/profileA(?:/)?$"
    },
    {
      "page": "/q1-profile-a",
      "regex": "^/q1\\-profile\\-a(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/q1\\-profile\\-a(?:/)?$"
    },
    {
      "page": "/q1-profile-b",
      "regex": "^/q1\\-profile\\-b(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/q1\\-profile\\-b(?:/)?$"
    },
    {
      "page": "/q1-profile-c",
      "regex": "^/q1\\-profile\\-c(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/q1\\-profile\\-c(?:/)?$"
    },
    {
      "page": "/q4-[profile]",
      "regex": "^/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPprofile": "nxtPprofile"
      },
      "namedRegex": "^/(?<nxtPprofile>[^/]+?)(?:/)?$"
    },
    {
      "page": "/q4-profile-a",
      "regex": "^/q4\\-profile\\-a(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/q4\\-profile\\-a(?:/)?$"
    },
    {
      "page": "/q4-profile-b",
      "regex": "^/q4\\-profile\\-b(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/q4\\-profile\\-b(?:/)?$"
    },
    {
      "page": "/q4-profile-c",
      "regex": "^/q4\\-profile\\-c(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/q4\\-profile\\-c(?:/)?$"
    },
    {
      "page": "/register",
      "regex": "^/register(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/register(?:/)?$"
    },
    {
      "page": "/start",
      "regex": "^/start(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/start(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}